{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0","program":"/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ink_metadata","--edition=2021","/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","overflow-checks=off","--cfg","feature=\"derive\"","--cfg","feature=\"std\"","-C","metadata=a6bdad5a944e159a","-C","extra-filename=-a6bdad5a944e159a","--out-dir","/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps","-L","dependency=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps","--extern","derive_more=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libderive_more-52ee9590232b26b9.so","--extern","impl_serde=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libimpl_serde-0642289e3b35b2a4.rmeta","--extern","ink_prelude=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libink_prelude-77a3c7534ec1bcf1.rmeta","--extern","ink_primitives=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libink_primitives-d5cd601a37bc1ef4.rmeta","--extern","scale_info=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libscale_info-5efe512f376598df.rmeta","--extern","serde=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libserde-c0d28fcf72ac886a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libink_metadata-a6bdad5a944e159a.rmeta"},"prelude":{"crate_id":{"name":"ink_metadata","disambiguator":[6381660910693498952,0]},"crate_root":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src","external_crates":[{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[266559774140218402,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","num":2,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6464017807659102018,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[308958561119313021,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16887813381474488870,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[18138047136180876386,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[16720472299414307338,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5531791840279234689,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[2995214285932701362,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17222063258158154566,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[7245893233601562531,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[4839492760463372304,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[1226649225884195013,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[12460504831400488231,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[2536915343129323536,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[4342342869490546433,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2139538778087984071,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":20,"id":{"name":"derive_more","disambiguator":[11242881121679728650,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":21,"id":{"name":"ink_prelude","disambiguator":[3701124085197549860,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":22,"id":{"name":"cfg_if","disambiguator":[2355118994789409886,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":23,"id":{"name":"ink_primitives","disambiguator":[4574101311388951330,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":24,"id":{"name":"scale_info","disambiguator":[9138369471682619030,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":25,"id":{"name":"serde","disambiguator":[9027324250618852925,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":26,"id":{"name":"serde_derive","disambiguator":[10732854868169682357,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":27,"id":{"name":"parity_scale_codec","disambiguator":[17703325470736383401,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":28,"id":{"name":"parity_scale_codec_derive","disambiguator":[637120561201148952,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":29,"id":{"name":"byte_slice_cast","disambiguator":[8493196897114896674,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":30,"id":{"name":"arrayvec","disambiguator":[3453118767949565817,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","num":31,"id":{"name":"scale_info_derive","disambiguator":[15793859746944834741,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","num":32,"id":{"name":"impl_serde","disambiguator":[11800912650321352812,0]}}],"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":612,"byte_end":3500,"line_start":15,"line_end":131,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":797,"byte_end":812,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"alias_span":null,"name":"ConstructorSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":818,"byte_end":840,"line_start":29,"line_end":29,"column_start":5,"column_end":27},"alias_span":null,"name":"ConstructorSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":846,"byte_end":858,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"alias_span":null,"name":"ContractSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":864,"byte_end":883,"line_start":31,"line_end":31,"column_start":5,"column_end":24},"alias_span":null,"name":"ContractSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":889,"byte_end":900,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"alias_span":null,"name":"DisplayName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1827},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":906,"byte_end":920,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"alias_span":null,"name":"EventParamSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":926,"byte_end":947,"line_start":34,"line_end":34,"column_start":5,"column_end":26},"alias_span":null,"name":"EventParamSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1660},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":953,"byte_end":962,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"alias_span":null,"name":"EventSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":968,"byte_end":984,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"alias_span":null,"name":"EventSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1933},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":990,"byte_end":1006,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"alias_span":null,"name":"MessageParamSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1012,"byte_end":1035,"line_start":38,"line_end":38,"column_start":5,"column_end":28},"alias_span":null,"name":"MessageParamSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1041,"byte_end":1052,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"alias_span":null,"name":"MessageSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1058,"byte_end":1076,"line_start":40,"line_end":40,"column_start":5,"column_end":23},"alias_span":null,"name":"MessageSpecBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1082,"byte_end":1096,"line_start":41,"line_end":41,"column_start":5,"column_end":19},"alias_span":null,"name":"ReturnTypeSpec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1665},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1102,"byte_end":1110,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"alias_span":null,"name":"Selector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1116,"byte_end":1124,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"TypeSpec","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":612,"byte_end":3500,"line_start":15,"line_end":131,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":153},{"krate":0,"index":416},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":1937},{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1958},{"krate":0,"index":507},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2010},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2056},{"krate":0,"index":509},{"krate":0,"index":513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layout","qualname":"::layout","value":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":607},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":721},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":675},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":800},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":752},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":842},{"krate":0,"index":97},{"krate":0,"index":927},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":952},{"krate":0,"index":1070},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1020},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":1147},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1103},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":1223},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1177},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1252},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":1344},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1298},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5203,"byte_end":5207,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Cell","qualname":"::layout::Layout::Cell","value":"Layout::Cell(CellLayout<F>)","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" An encoded cell.","sig":null,"attributes":[{"value":"/ An encoded cell.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4963,"byte_end":4983,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4988,"byte_end":4991,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This is the only leaf node within the layout graph.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4996,"byte_end":5051,"line_start":55,"line_end":55,"column_start":5,"column_end":60}},{"value":"/ All layout nodes have this node type as their leafs.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5056,"byte_end":5112,"line_start":56,"line_end":56,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5117,"byte_end":5120,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This represents the encoding of a single cell mapped to a single key.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5125,"byte_end":5198,"line_start":58,"line_end":58,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":612},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5383,"byte_end":5387,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Hash","qualname":"::layout::Layout::Hash","value":"Layout::Hash(HashLayout<F>)","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" A layout that hashes values into the entire storage key space.","sig":null,"attributes":[{"value":"/ A layout that hashes values into the entire storage key space.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5228,"byte_end":5294,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5299,"byte_end":5302,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This is commonly used by ink! hashmaps and similar data structures.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5307,"byte_end":5378,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":615},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5540,"byte_end":5545,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Array","qualname":"::layout::Layout::Array","value":"Layout::Array(ArrayLayout<F>)","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" An array of associated storage cells encoded with a given type.","sig":null,"attributes":[{"value":"/ An array of associated storage cells encoded with a given type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5408,"byte_end":5475,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5480,"byte_end":5483,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This can also represent only a single cell.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5488,"byte_end":5535,"line_start":66,"line_end":66,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5623,"byte_end":5629,"line_start":69,"line_end":69,"column_start":5,"column_end":11},"name":"Struct","qualname":"::layout::Layout::Struct","value":"Layout::Struct(StructLayout<F>)","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" A struct layout with fields of different types.\n","sig":null,"attributes":[{"value":"/ A struct layout with fields of different types.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5567,"byte_end":5618,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5731,"byte_end":5735,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Enum","qualname":"::layout::Layout::Enum","value":"Layout::Enum(EnumLayout<F>)","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" An enum layout with a discriminant telling which variant is layed out.\n","sig":null,"attributes":[{"value":"/ An enum layout with a discriminant telling which variant is layed out.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5652,"byte_end":5726,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":607},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4930,"byte_end":4936,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Layout","qualname":"::layout::Layout","value":"pub enum Layout<F: Form = MetaForm> {\n    Cell(CellLayout<F>),\n    Hash(HashLayout<F>),\n    Array(ArrayLayout<F>),\n    Struct(StructLayout<F>),\n    Enum(EnumLayout<F>),\n}","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621}],"decl_id":null,"docs":" Represents the static storage layout of an ink! smart contract.\n","sig":null,"attributes":[{"value":"/ Represents the static storage layout of an ink! smart contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4585,"byte_end":4652,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4732,"byte_end":4885,"line_start":47,"line_end":50,"column_start":1,"column_end":4}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":4886,"byte_end":4920,"line_start":51,"line_end":51,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5861,"byte_end":5870,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"LayoutKey","qualname":"::layout::LayoutKey","value":"LayoutKey {  }","parent":null,"children":[{"krate":0,"index":625}],"decl_id":null,"docs":" A pointer into some storage region.\n","sig":null,"attributes":[{"value":"/ A pointer into some storage region.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5755,"byte_end":5794,"line_start":74,"line_end":74,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6732,"byte_end":6740,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<LayoutKey>::to_bytes","value":"pub fn to_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying bytes of the layout key.\n","sig":null,"attributes":[{"value":"/ Returns the underlying bytes of the layout key.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6669,"byte_end":6720,"line_start":113,"line_end":113,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7056,"byte_end":7066,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"CellLayout","qualname":"::layout::CellLayout","value":"CellLayout {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"decl_id":null,"docs":" A SCALE encoded cell.\n","sig":null,"attributes":[{"value":"/ A SCALE encoded cell.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6786,"byte_end":6811,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6891,"byte_end":7044,"line_start":121,"line_end":124,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7284,"byte_end":7287,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<CellLayout>::new","value":"pub fn new<T>(LayoutKey) -> Self where T: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cell layout.\n","sig":null,"attributes":[{"value":"/ Creates a new cell layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7242,"byte_end":7272,"line_start":133,"line_end":133,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8628,"byte_end":8631,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"key","qualname":"<CellLayout<F>>::key","value":"pub fn key(&Self) -> &LayoutKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key into the storage.\n","sig":null,"attributes":[{"value":"/ Returns the offset key into the storage.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8572,"byte_end":8616,"line_start":184,"line_end":184,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8739,"byte_end":8741,"line_start":190,"line_end":190,"column_start":12,"column_end":14},"name":"ty","qualname":"<CellLayout<F>>::ty","value":"pub fn ty(&Self) -> &F::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the encoded entity.\n","sig":null,"attributes":[{"value":"/ Returns the type of the encoded entity.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8684,"byte_end":8727,"line_start":189,"line_end":189,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9173,"byte_end":9183,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"HashLayout","qualname":"::layout::HashLayout","value":"HashLayout {  }","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"decl_id":null,"docs":" A hashing layout potentially hitting all cells of the storage.","sig":null,"attributes":[{"value":"/ A hashing layout potentially hitting all cells of the storage.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8789,"byte_end":8855,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8856,"byte_end":8859,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Every hashing layout has an offset and a strategy to compute its keys.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8860,"byte_end":8934,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9008,"byte_end":9161,"line_start":199,"line_end":202,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9857,"byte_end":9860,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<HashLayout>::new","value":"pub fn new<K, L>(K, HashingStrategy, L) -> Self where K: Into<LayoutKey>,\nL: Into<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unbounded layout.\n","sig":null,"attributes":[{"value":"/ Creates a new unbounded layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9810,"byte_end":9845,"line_start":225,"line_end":225,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10236,"byte_end":10242,"line_start":244,"line_end":244,"column_start":12,"column_end":18},"name":"offset","qualname":"<HashLayout<F>>::offset","value":"pub fn offset(&Self) -> &LayoutKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the key offset used by the strategy.\n","sig":null,"attributes":[{"value":"/ Returns the key offset used by the strategy.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10176,"byte_end":10224,"line_start":243,"line_end":243,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10377,"byte_end":10385,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"strategy","qualname":"<HashLayout<F>>::strategy","value":"pub fn strategy(&Self) -> &HashingStrategy","parent":null,"children":[],"decl_id":null,"docs":" Returns the hashing strategy to layout the underlying elements.\n","sig":null,"attributes":[{"value":"/ Returns the hashing strategy to layout the underlying elements.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10298,"byte_end":10365,"line_start":248,"line_end":248,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10525,"byte_end":10531,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"layout","qualname":"<HashLayout<F>>::layout","value":"pub fn layout(&Self) -> &Layout<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage layout of the unbounded layout elements.\n","sig":null,"attributes":[{"value":"/ Returns the storage layout of the unbounded layout elements.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10449,"byte_end":10513,"line_start":253,"line_end":253,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10921,"byte_end":10936,"line_start":265,"line_end":265,"column_start":12,"column_end":27},"name":"HashingStrategy","qualname":"::layout::HashingStrategy","value":"HashingStrategy {  }","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":925},{"krate":0,"index":926}],"decl_id":null,"docs":" The unbounded hashing strategy.","sig":null,"attributes":[{"value":"/ The unbounded hashing strategy.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10585,"byte_end":10620,"line_start":259,"line_end":259,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10621,"byte_end":10624,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ The offset key is used as another postfix for the computation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10625,"byte_end":10691,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/ So the actual formula is: `hasher(prefix + encoded(key) + offset + postfix)`","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10692,"byte_end":10772,"line_start":262,"line_end":262,"column_start":1,"column_end":81}},{"value":"/ Where `+` in this contexts means append of the byte slices.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10773,"byte_end":10836,"line_start":263,"line_end":263,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11489,"byte_end":11492,"line_start":284,"line_end":284,"column_start":12,"column_end":15},"name":"new","qualname":"<HashingStrategy>::new","value":"pub fn new(CryptoHasher, Vec<u8>, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unbounded hashing strategy.\n","sig":null,"attributes":[{"value":"/ Creates a new unbounded hashing strategy.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11432,"byte_end":11477,"line_start":283,"line_end":283,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11709,"byte_end":11715,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashingStrategy>::hasher","value":"pub fn hasher(&Self) -> &CryptoHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns the supported crypto hasher.\n","sig":null,"attributes":[{"value":"/ Returns the supported crypto hasher.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11657,"byte_end":11697,"line_start":292,"line_end":292,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11839,"byte_end":11845,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"prefix","qualname":"<HashingStrategy>::prefix","value":"pub fn prefix(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the optional prefix to the computed hash.\n","sig":null,"attributes":[{"value":"/ Returns the optional prefix to the computed hash.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11774,"byte_end":11827,"line_start":297,"line_end":297,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11962,"byte_end":11969,"line_start":303,"line_end":303,"column_start":12,"column_end":19},"name":"postfix","qualname":"<HashingStrategy>::postfix","value":"pub fn postfix(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the optional postfix to the computed hash.\n","sig":null,"attributes":[{"value":"/ Returns the optional postfix to the computed hash.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11896,"byte_end":11950,"line_start":302,"line_end":302,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":928},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12223,"byte_end":12233,"line_start":312,"line_end":312,"column_start":5,"column_end":15},"name":"Blake2x256","qualname":"::layout::CryptoHasher::Blake2x256","value":"CryptoHasher::Blake2x256","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The BLAKE-2 crypto hasher with an output of 256 bits.\n","sig":null,"attributes":[{"value":"/ The BLAKE-2 crypto hasher with an output of 256 bits.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12161,"byte_end":12218,"line_start":311,"line_end":311,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":930},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12299,"byte_end":12307,"line_start":314,"line_end":314,"column_start":5,"column_end":13},"name":"Sha2x256","qualname":"::layout::CryptoHasher::Sha2x256","value":"CryptoHasher::Sha2x256","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The SHA-2 crypto hasher with an output of 256 bits.\n","sig":null,"attributes":[{"value":"/ The SHA-2 crypto hasher with an output of 256 bits.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12239,"byte_end":12294,"line_start":313,"line_end":313,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":932},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12374,"byte_end":12383,"line_start":316,"line_end":316,"column_start":5,"column_end":14},"name":"Keccak256","qualname":"::layout::CryptoHasher::Keccak256","value":"CryptoHasher::Keccak256","parent":{"krate":0,"index":927},"children":[],"decl_id":null,"docs":" The KECCAK crypto hasher with an output of 256 bits.\n","sig":null,"attributes":[{"value":"/ The KECCAK crypto hasher with an output of 256 bits.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12313,"byte_end":12369,"line_start":315,"line_end":315,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":927},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12142,"byte_end":12154,"line_start":310,"line_end":310,"column_start":10,"column_end":22},"name":"CryptoHasher","qualname":"::layout::CryptoHasher","value":"pub enum CryptoHasher { Blake2x256, Sha2x256, Keccak256, }","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"decl_id":null,"docs":" One of the supported crypto hashers.\n","sig":null,"attributes":[{"value":"/ One of the supported crypto hashers.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12019,"byte_end":12059,"line_start":308,"line_end":308,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12731,"byte_end":12742,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"ArrayLayout","qualname":"::layout::ArrayLayout","value":"ArrayLayout {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" A layout for an array of associated cells with the same encoding.\n","sig":null,"attributes":[{"value":"/ A layout for an array of associated cells with the same encoding.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12388,"byte_end":12457,"line_start":319,"line_end":319,"column_start":1,"column_end":70}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12531,"byte_end":12684,"line_start":321,"line_end":324,"column_start":1,"column_end":4}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":12685,"byte_end":12719,"line_start":325,"line_end":325,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13260,"byte_end":13263,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrayLayout>::new","value":"pub fn new<K, L>(K, u32, u64, L) -> Self where K: Into<LayoutKey>,\nL: Into<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array layout with the given length.\n","sig":null,"attributes":[{"value":"/ Creates an array layout with the given length.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13198,"byte_end":13248,"line_start":340,"line_end":340,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13781,"byte_end":13787,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"offset","qualname":"<ArrayLayout<F>>::offset","value":"pub fn offset(&Self) -> &LayoutKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset key of the array layout.","sig":null,"attributes":[{"value":"/ Returns the offset key of the array layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13638,"byte_end":13685,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13690,"byte_end":13693,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This is the same key as the element at index 0 of the array layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13698,"byte_end":13769,"line_start":362,"line_end":362,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13910,"byte_end":13913,"line_start":368,"line_end":368,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayLayout<F>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the array layout.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the array layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13843,"byte_end":13898,"line_start":367,"line_end":367,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14047,"byte_end":14061,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"cells_per_elem","qualname":"<ArrayLayout<F>>::cells_per_elem","value":"pub fn cells_per_elem(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of cells each element in the array layout consists of.\n","sig":null,"attributes":[{"value":"/ Returns the number of cells each element in the array layout consists of.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13958,"byte_end":14035,"line_start":372,"line_end":372,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14195,"byte_end":14201,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"layout","qualname":"<ArrayLayout<F>>::layout","value":"pub fn layout(&Self) -> &Layout<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the layout of the elements stored in the array layout.\n","sig":null,"attributes":[{"value":"/ Returns the layout of the elements stored in the array layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14117,"byte_end":14183,"line_start":377,"line_end":377,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1147},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14927,"byte_end":14939,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"StructLayout","qualname":"::layout::StructLayout","value":"StructLayout {  }","parent":null,"children":[{"krate":0,"index":1149}],"decl_id":null,"docs":" A struct layout with consecutive fields of different layout.\n","sig":null,"attributes":[{"value":"/ A struct layout with consecutive fields of different layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14624,"byte_end":14688,"line_start":396,"line_end":396,"column_start":1,"column_end":65}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14762,"byte_end":14915,"line_start":398,"line_end":401,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15107,"byte_end":15110,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"new","qualname":"<StructLayout>::new","value":"pub fn new<F>(F) -> Self where F: IntoIterator<Item = FieldLayout>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new struct layout.\n","sig":null,"attributes":[{"value":"/ Creates a new struct layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15063,"byte_end":15095,"line_start":408,"line_end":408,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15383,"byte_end":15389,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"fields","qualname":"<StructLayout<F>>::fields","value":"pub fn fields(&Self) -> &[FieldLayout<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the fields of the struct layout.\n","sig":null,"attributes":[{"value":"/ Returns the fields of the struct layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15327,"byte_end":15371,"line_start":423,"line_end":423,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16118,"byte_end":16129,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"FieldLayout","qualname":"::layout::FieldLayout","value":"FieldLayout {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"decl_id":null,"docs":" The layout for a particular field of a struct layout.\n","sig":null,"attributes":[{"value":"/ The layout for a particular field of a struct layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15822,"byte_end":15879,"line_start":443,"line_end":443,"column_start":1,"column_end":58}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15953,"byte_end":16106,"line_start":445,"line_end":448,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16514,"byte_end":16517,"line_start":463,"line_end":463,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldLayout>::new","value":"pub fn new<N, L>(N, L) -> Self where N: Into<Option<&'static str>>,\nL: Into<Layout>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new field layout.\n","sig":null,"attributes":[{"value":"/ Creates a new field layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16471,"byte_end":16502,"line_start":462,"line_end":462,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16904,"byte_end":16908,"line_start":482,"line_end":482,"column_start":12,"column_end":16},"name":"name","qualname":"<FieldLayout<F>>::name","value":"pub fn name(&Self) -> Option<&F::String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the field.","sig":null,"attributes":[{"value":"/ Returns the name of the field.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16780,"byte_end":16814,"line_start":479,"line_end":479,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16819,"byte_end":16822,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Can be missing, e.g. in case of an enum tuple struct variant.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16827,"byte_end":16892,"line_start":481,"line_end":481,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17125,"byte_end":17131,"line_start":490,"line_end":490,"column_start":12,"column_end":18},"name":"layout","qualname":"<FieldLayout<F>>::layout","value":"pub fn layout(&Self) -> &Layout<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the kind of the field.","sig":null,"attributes":[{"value":"/ Returns the kind of the field.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16978,"byte_end":17012,"line_start":486,"line_end":486,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17017,"byte_end":17020,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This is either a direct layout bound","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17025,"byte_end":17065,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/ or another recursive layout sub-struct.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17070,"byte_end":17113,"line_start":489,"line_end":489,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17643,"byte_end":17655,"line_start":508,"line_end":508,"column_start":12,"column_end":24},"name":"Discriminant","qualname":"::layout::Discriminant","value":"","parent":null,"children":[],"decl_id":null,"docs":" The discriminant of an enum variant.\n","sig":null,"attributes":[{"value":"/ The discriminant of an enum variant.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17505,"byte_end":17545,"line_start":506,"line_end":506,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17843,"byte_end":17848,"line_start":518,"line_end":518,"column_start":12,"column_end":17},"name":"value","qualname":"<Discriminant>::value","value":"pub fn value(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the discriminant\n","sig":null,"attributes":[{"value":"/ Returns the value of the discriminant","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17790,"byte_end":17831,"line_start":517,"line_end":517,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1344},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18192,"byte_end":18202,"line_start":530,"line_end":530,"column_start":12,"column_end":22},"name":"EnumLayout","qualname":"::layout::EnumLayout","value":"EnumLayout {  }","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"decl_id":null,"docs":" An enum storage layout.\n","sig":null,"attributes":[{"value":"/ An enum storage layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17891,"byte_end":17918,"line_start":523,"line_end":523,"column_start":1,"column_end":28}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17992,"byte_end":18145,"line_start":525,"line_end":528,"column_start":1,"column_end":4}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18146,"byte_end":18180,"line_start":529,"line_end":529,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18485,"byte_end":18488,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"new","qualname":"<EnumLayout>::new","value":"pub fn new<K, V>(K, V) -> Self where K: Into<LayoutKey>, V: IntoIterator<Item\n= (Discriminant, StructLayout)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new enum layout.\n","sig":null,"attributes":[{"value":"/ Creates a new enum layout.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18443,"byte_end":18473,"line_start":538,"line_end":538,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18911,"byte_end":18923,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"dispatch_key","qualname":"<EnumLayout<F>>::dispatch_key","value":"pub fn dispatch_key(&Self) -> &LayoutKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the key where the discriminant is stored to dispatch the variants.\n","sig":null,"attributes":[{"value":"/ Returns the key where the discriminant is stored to dispatch the variants.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18821,"byte_end":18899,"line_start":555,"line_end":555,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":19034,"byte_end":19042,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"variants","qualname":"<EnumLayout<F>>::variants","value":"pub fn variants(&Self) -> &BTreeMap<Discriminant, StructLayout<F>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the variants of the enum.\n","sig":null,"attributes":[{"value":"/ Returns the variants of the enum.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18985,"byte_end":19022,"line_start":560,"line_end":560,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":20865,"byte_end":20877,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ContractSpec","qualname":"::specs::ContractSpec","value":"ContractSpec {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"decl_id":null,"docs":" Describes a contract.\n","sig":null,"attributes":[{"value":"/ Describes a contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":20618,"byte_end":20643,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":20700,"byte_end":20853,"line_start":44,"line_end":47,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22124,"byte_end":22136,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"constructors","qualname":"<ContractSpec<F>>::constructors","value":"pub fn constructors(&Self) -> &[ConstructorSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of constructors of the contract.\n","sig":null,"attributes":[{"value":"/ Returns the set of constructors of the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22060,"byte_end":22112,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22271,"byte_end":22279,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"messages","qualname":"<ContractSpec<F>>::messages","value":"pub fn messages(&Self) -> &[MessageSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the external messages of the contract.\n","sig":null,"attributes":[{"value":"/ Returns the external messages of the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22209,"byte_end":22259,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22395,"byte_end":22401,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"events","qualname":"<ContractSpec<F>>::events","value":"pub fn events(&Self) -> &[EventSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the events of the contract.\n","sig":null,"attributes":[{"value":"/ Returns the events of the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22344,"byte_end":22383,"line_start":98,"line_end":98,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22513,"byte_end":22517,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"docs","qualname":"<ContractSpec<F>>::docs","value":"pub fn docs(&Self) -> &[F::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the contract documentation.\n","sig":null,"attributes":[{"value":"/ Returns the contract documentation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22462,"byte_end":22501,"line_start":103,"line_end":103,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":205},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22639,"byte_end":22644,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Valid","qualname":"::specs::Valid","value":"pub enum Valid { }","parent":null,"children":[],"decl_id":null,"docs":" The message builder is ready to finalize construction.\n","sig":null,"attributes":[{"value":"/ The message builder is ready to finalize construction.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22571,"byte_end":22629,"line_start":109,"line_end":109,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":206},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22720,"byte_end":22727,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"Invalid","qualname":"::specs::Invalid","value":"pub enum Invalid { }","parent":null,"children":[],"decl_id":null,"docs":" The message builder is not ready to finalize construction.\n","sig":null,"attributes":[{"value":"/ The message builder is not ready to finalize construction.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22648,"byte_end":22710,"line_start":111,"line_end":111,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22784,"byte_end":22803,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"ContractSpecBuilder","qualname":"::specs::ContractSpecBuilder","value":"ContractSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" A builder for contracts.\n","sig":null,"attributes":[{"value":"/ A builder for contracts.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22732,"byte_end":22760,"line_start":114,"line_end":114,"column_start":1,"column_end":29}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22761,"byte_end":22772,"line_start":115,"line_end":115,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23119,"byte_end":23131,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"constructors","qualname":"<ContractSpecBuilder<Invalid>>::constructors","value":"pub fn constructors<C>(Self, C) -> ContractSpecBuilder<Valid> where\nC: IntoIterator<Item = ConstructorSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the constructors of the contract specification.\n","sig":null,"attributes":[{"value":"/ Sets the constructors of the contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23051,"byte_end":23107,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23653,"byte_end":23661,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"messages","qualname":"<ContractSpecBuilder<S>>::messages","value":"pub fn messages<M>(Self, M) -> Self where M: IntoIterator<Item = MessageSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the messages of the contract specification.\n","sig":null,"attributes":[{"value":"/ Sets the messages of the contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23589,"byte_end":23641,"line_start":141,"line_end":141,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24068,"byte_end":24074,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"events","qualname":"<ContractSpecBuilder<S>>::events","value":"pub fn events<E>(Self, E) -> Self where E: IntoIterator<Item = EventSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the events of the contract specification.\n","sig":null,"attributes":[{"value":"/ Sets the events of the contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24006,"byte_end":24056,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24478,"byte_end":24482,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"docs","qualname":"<ContractSpecBuilder<S>>::docs","value":"pub fn docs<D>(Self, D) -> Self where D: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the documentation of the contract specification.\n","sig":null,"attributes":[{"value":"/ Sets the documentation of the contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24409,"byte_end":24466,"line_start":171,"line_end":171,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24917,"byte_end":24921,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"done","qualname":"<ContractSpecBuilder<Valid>>::done","value":"pub fn done(Self) -> ContractSpec","parent":null,"children":[],"decl_id":null,"docs":" Finalizes construction of the contract specification.\n","sig":null,"attributes":[{"value":"/ Finalizes construction of the contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24848,"byte_end":24905,"line_start":188,"line_end":188,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25292,"byte_end":25295,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractSpec>::new","value":"pub fn new() -> ContractSpecBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new contract specification.\n","sig":null,"attributes":[{"value":"/ Creates a new contract specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25239,"byte_end":25280,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25859,"byte_end":25874,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"ConstructorSpec","qualname":"::specs::ConstructorSpec","value":"ConstructorSpec { label, selector, payable, args, docs }","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504}],"decl_id":null,"docs":" Describes a constructor of a contract.\n","sig":null,"attributes":[{"value":"/ Describes a constructor of a contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25595,"byte_end":25637,"line_start":217,"line_end":217,"column_start":1,"column_end":43}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25694,"byte_end":25847,"line_start":219,"line_end":222,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":1500},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26043,"byte_end":26048,"line_start":227,"line_end":227,"column_start":9,"column_end":14},"name":"label","qualname":"::specs::ConstructorSpec::label","value":"<F as scale_info::form::Form>::String","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" The label of the constructor.","sig":null,"attributes":[{"value":"/ The label of the constructor.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25901,"byte_end":25934,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25939,"byte_end":25942,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ In case of a trait provided constructor the label is prefixed with the trait label.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25947,"byte_end":26034,"line_start":226,"line_end":226,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1501},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26111,"byte_end":26119,"line_start":229,"line_end":229,"column_start":9,"column_end":17},"name":"selector","qualname":"::specs::ConstructorSpec::selector","value":"specs::Selector","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" The selector hash of the message.\n","sig":null,"attributes":[{"value":"/ The selector hash of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26065,"byte_end":26102,"line_start":228,"line_end":228,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1502},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26203,"byte_end":26210,"line_start":231,"line_end":231,"column_start":9,"column_end":16},"name":"payable","qualname":"::specs::ConstructorSpec::payable","value":"bool","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" If the constructor accepts any `value` from the caller.\n","sig":null,"attributes":[{"value":"/ If the constructor accepts any `value` from the caller.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26135,"byte_end":26194,"line_start":230,"line_end":230,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1503},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26276,"byte_end":26280,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"name":"args","qualname":"::specs::ConstructorSpec::args","value":"std::vec::Vec<specs::MessageParamSpec<F>>","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" The parameters of the deployment handler.\n","sig":null,"attributes":[{"value":"/ The parameters of the deployment handler.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26222,"byte_end":26267,"line_start":232,"line_end":232,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1504},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26362,"byte_end":26366,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"name":"docs","qualname":"::specs::ConstructorSpec::docs","value":"std::vec::Vec<<F as scale_info::form::Form>::String>","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":" The deployment handler documentation.\n","sig":null,"attributes":[{"value":"/ The deployment handler documentation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26312,"byte_end":26353,"line_start":234,"line_end":234,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27149,"byte_end":27154,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"label","qualname":"<ConstructorSpec<F>>::label","value":"pub fn label(&Self) -> &F::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the label of the constructor.","sig":null,"attributes":[{"value":"/ Returns the label of the constructor.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26996,"byte_end":27037,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27042,"byte_end":27045,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ In case of a trait provided constructor the label is prefixed with the trait label.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27050,"byte_end":27137,"line_start":262,"line_end":262,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27266,"byte_end":27274,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"selector","qualname":"<ConstructorSpec<F>>::selector","value":"pub fn selector(&Self) -> &Selector","parent":null,"children":[],"decl_id":null,"docs":" Returns the selector hash of the message.\n","sig":null,"attributes":[{"value":"/ Returns the selector hash of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27209,"byte_end":27254,"line_start":267,"line_end":267,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27399,"byte_end":27406,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"payable","qualname":"<ConstructorSpec<F>>::payable","value":"pub fn payable(&Self) -> &bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the constructor is payable by the caller.\n","sig":null,"attributes":[{"value":"/ Returns if the constructor is payable by the caller.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27331,"byte_end":27387,"line_start":272,"line_end":272,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27523,"byte_end":27527,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"args","qualname":"<ConstructorSpec<F>>::args","value":"pub fn args(&Self) -> &[MessageParamSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the parameters of the deployment handler.\n","sig":null,"attributes":[{"value":"/ Returns the parameters of the deployment handler.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27458,"byte_end":27511,"line_start":277,"line_end":277,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27654,"byte_end":27658,"line_start":283,"line_end":283,"column_start":12,"column_end":16},"name":"docs","qualname":"<ConstructorSpec<F>>::docs","value":"pub fn docs(&Self) -> &[F::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the deployment handler documentation.\n","sig":null,"attributes":[{"value":"/ Returns the deployment handler documentation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27593,"byte_end":27642,"line_start":282,"line_end":282,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27952,"byte_end":27974,"line_start":296,"line_end":296,"column_start":12,"column_end":34},"name":"ConstructorSpecBuilder","qualname":"::specs::ConstructorSpecBuilder","value":"ConstructorSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"decl_id":null,"docs":" A builder for constructors.","sig":null,"attributes":[{"value":"/ A builder for constructors.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27712,"byte_end":27743,"line_start":288,"line_end":288,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27744,"byte_end":27747,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Developer Note","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27748,"byte_end":27768,"line_start":290,"line_end":290,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27769,"byte_end":27772,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ Some fields are guarded by a type-state pattern to fail at","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27773,"byte_end":27835,"line_start":292,"line_end":292,"column_start":1,"column_end":63}},{"value":"/ compile-time instead of at run-time. This is useful to better","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27836,"byte_end":27901,"line_start":293,"line_end":293,"column_start":1,"column_end":66}},{"value":"/ debug code-gen macros.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27902,"byte_end":27928,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":27929,"byte_end":27940,"line_start":295,"line_end":295,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28166,"byte_end":28176,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"from_label","qualname":"<ConstructorSpec>::from_label","value":"pub fn from_label(&'static str)\n-> ConstructorSpecBuilder<Missing<state::Selector>, Missing<state::IsPayable>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new constructor spec builder.\n","sig":null,"attributes":[{"value":"/ Creates a new constructor spec builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28111,"byte_end":28154,"line_start":302,"line_end":302,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28726,"byte_end":28734,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"selector","qualname":"<ConstructorSpecBuilder<Missing<state::Selector>, P>>::selector","value":"pub fn selector(Self, [u8; ]) -> ConstructorSpecBuilder<state::Selector, P>","parent":null,"children":[],"decl_id":null,"docs":" Sets the function selector of the message.\n","sig":null,"attributes":[{"value":"/ Sets the function selector of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28668,"byte_end":28714,"line_start":320,"line_end":320,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29193,"byte_end":29200,"line_start":337,"line_end":337,"column_start":12,"column_end":19},"name":"payable","qualname":"<ConstructorSpecBuilder<S, Missing<state::IsPayable>>>::payable","value":"pub fn payable(Self, bool) -> ConstructorSpecBuilder<S, state::IsPayable>","parent":null,"children":[],"decl_id":null,"docs":" Sets if the constructor is payable, thus accepting value for the caller.\n","sig":null,"attributes":[{"value":"/ Sets if the constructor is payable, thus accepting value for the caller.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29105,"byte_end":29181,"line_start":336,"line_end":336,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29614,"byte_end":29618,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"args","qualname":"<ConstructorSpecBuilder<S, P>>::args","value":"pub fn args<A>(Self, A) -> Self where A: IntoIterator<Item = MessageParamSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the input arguments of the message specification.\n","sig":null,"attributes":[{"value":"/ Sets the input arguments of the message specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29544,"byte_end":29602,"line_start":352,"line_end":352,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29945,"byte_end":29949,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"docs","qualname":"<ConstructorSpecBuilder<S, P>>::docs","value":"pub fn docs<D>(Self, D) -> Self where D: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the documentation of the message specification.\n","sig":null,"attributes":[{"value":"/ Sets the documentation of the message specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29877,"byte_end":29933,"line_start":363,"line_end":363,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30343,"byte_end":30347,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"done","qualname":"<ConstructorSpecBuilder<state::Selector, state::IsPayable>>::done","value":"pub fn done(Self) -> ConstructorSpec","parent":null,"children":[],"decl_id":null,"docs":" Finishes construction of the constructor.\n","sig":null,"attributes":[{"value":"/ Finishes construction of the constructor.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30286,"byte_end":30331,"line_start":376,"line_end":376,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30692,"byte_end":30703,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"MessageSpec","qualname":"::specs::MessageSpec","value":"MessageSpec {  }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"decl_id":null,"docs":" Describes a contract message.\n","sig":null,"attributes":[{"value":"/ Describes a contract message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30402,"byte_end":30435,"line_start":382,"line_end":382,"column_start":1,"column_end":34}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30492,"byte_end":30645,"line_start":384,"line_end":387,"column_start":1,"column_end":4}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30646,"byte_end":30680,"line_start":388,"line_end":388,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31518,"byte_end":31525,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"Missing","qualname":"::specs::Missing","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type state for builders to tell that some mandatory state has not yet been set\n yet or to fail upon setting the same state multiple times.\n","sig":null,"attributes":[{"value":"/ Type state for builders to tell that some mandatory state has not yet been set","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31361,"byte_end":31443,"line_start":409,"line_end":409,"column_start":1,"column_end":83}},{"value":"/ yet or to fail upon setting the same state multiple times.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31444,"byte_end":31506,"line_start":410,"line_end":410,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":265},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31759,"byte_end":31767,"line_start":418,"line_end":418,"column_start":16,"column_end":24},"name":"Selector","qualname":"::specs::state::Selector","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type state for the message selector of a message.\n","sig":null,"attributes":[{"value":"/ Type state for the message selector of a message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31690,"byte_end":31743,"line_start":417,"line_end":417,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31836,"byte_end":31843,"line_start":420,"line_end":420,"column_start":16,"column_end":23},"name":"Mutates","qualname":"::specs::state::Mutates","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type state for the mutability of a message.\n","sig":null,"attributes":[{"value":"/ Type state for the mutability of a message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31773,"byte_end":31820,"line_start":419,"line_end":419,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":269},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31918,"byte_end":31927,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"IsPayable","qualname":"::specs::state::IsPayable","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type state for telling if the message is payable.\n","sig":null,"attributes":[{"value":"/ Type state for telling if the message is payable.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31849,"byte_end":31902,"line_start":421,"line_end":421,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":271},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31992,"byte_end":31999,"line_start":424,"line_end":424,"column_start":16,"column_end":23},"name":"Returns","qualname":"::specs::state::Returns","value":"","parent":null,"children":[],"decl_id":null,"docs":" Type state for the message return type.\n","sig":null,"attributes":[{"value":"/ Type state for the message return type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":31933,"byte_end":31976,"line_start":423,"line_end":423,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32078,"byte_end":32088,"line_start":429,"line_end":429,"column_start":12,"column_end":22},"name":"from_label","qualname":"<MessageSpec>::from_label","value":"pub fn from_label(&'static str)\n->\n    MessageSpecBuilder<Missing<state::Selector>, Missing<state::Mutates>,\n    Missing<state::IsPayable>, Missing<state::Returns>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new message spec builder.\n","sig":null,"attributes":[{"value":"/ Creates a new message spec builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32027,"byte_end":32066,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32903,"byte_end":32908,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"label","qualname":"<MessageSpec<F>>::label","value":"pub fn label(&Self) -> &F::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the label of the message.","sig":null,"attributes":[{"value":"/ Returns the label of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32718,"byte_end":32755,"line_start":456,"line_end":456,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32760,"byte_end":32763,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ In case of trait provided messages and constructors the prefix","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32768,"byte_end":32834,"line_start":458,"line_end":458,"column_start":5,"column_end":71}},{"value":"/ by convention in ink! is the label of the trait.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32839,"byte_end":32891,"line_start":459,"line_end":459,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33020,"byte_end":33028,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"selector","qualname":"<MessageSpec<F>>::selector","value":"pub fn selector(&Self) -> &Selector","parent":null,"children":[],"decl_id":null,"docs":" Returns the selector hash of the message.\n","sig":null,"attributes":[{"value":"/ Returns the selector hash of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32963,"byte_end":33008,"line_start":464,"line_end":464,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33169,"byte_end":33176,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"mutates","qualname":"<MessageSpec<F>>::mutates","value":"pub fn mutates(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message is allowed to mutate the contract state.\n","sig":null,"attributes":[{"value":"/ Returns true if the message is allowed to mutate the contract state.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33085,"byte_end":33157,"line_start":469,"line_end":469,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33295,"byte_end":33302,"line_start":475,"line_end":475,"column_start":12,"column_end":19},"name":"payable","qualname":"<MessageSpec<F>>::payable","value":"pub fn payable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message is payable by the caller.\n","sig":null,"attributes":[{"value":"/ Returns true if the message is payable by the caller.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33226,"byte_end":33283,"line_start":474,"line_end":474,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33406,"byte_end":33410,"line_start":480,"line_end":480,"column_start":12,"column_end":16},"name":"args","qualname":"<MessageSpec<F>>::args","value":"pub fn args(&Self) -> &[MessageParamSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the parameters of the message.\n","sig":null,"attributes":[{"value":"/ Returns the parameters of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33352,"byte_end":33394,"line_start":479,"line_end":479,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33531,"byte_end":33542,"line_start":485,"line_end":485,"column_start":12,"column_end":23},"name":"return_type","qualname":"<MessageSpec<F>>::return_type","value":"pub fn return_type(&Self) -> &ReturnTypeSpec<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the return type of the message.\n","sig":null,"attributes":[{"value":"/ Returns the return type of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33476,"byte_end":33519,"line_start":484,"line_end":484,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33661,"byte_end":33665,"line_start":490,"line_end":490,"column_start":12,"column_end":16},"name":"docs","qualname":"<MessageSpec<F>>::docs","value":"pub fn docs(&Self) -> &[F::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the message documentation.\n","sig":null,"attributes":[{"value":"/ Returns the message documentation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33611,"byte_end":33649,"line_start":489,"line_end":489,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33989,"byte_end":34007,"line_start":504,"line_end":504,"column_start":12,"column_end":30},"name":"MessageSpecBuilder","qualname":"::specs::MessageSpecBuilder","value":"MessageSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" A builder for messages.","sig":null,"attributes":[{"value":"/ A builder for messages.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33719,"byte_end":33746,"line_start":495,"line_end":495,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33747,"byte_end":33750,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ # Developer Note","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33751,"byte_end":33771,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33772,"byte_end":33775,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ Some fields are guarded by a type-state pattern to fail at","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33776,"byte_end":33838,"line_start":499,"line_end":499,"column_start":1,"column_end":63}},{"value":"/ compile-time instead of at run-time. This is useful to better","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33839,"byte_end":33904,"line_start":500,"line_end":500,"column_start":1,"column_end":66}},{"value":"/ debug code-gen macros.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33905,"byte_end":33931,"line_start":501,"line_end":501,"column_start":1,"column_end":27}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33932,"byte_end":33965,"line_start":502,"line_end":502,"column_start":1,"column_end":34}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":33966,"byte_end":33977,"line_start":503,"line_end":503,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34281,"byte_end":34289,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"selector","qualname":"<MessageSpecBuilder<Missing<state::Selector>, M, P, R>>::selector","value":"pub fn selector(Self, [u8; ]) -> MessageSpecBuilder<state::Selector, M, P, R>","parent":null,"children":[],"decl_id":null,"docs":" Sets the function selector of the message.\n","sig":null,"attributes":[{"value":"/ Sets the function selector of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34223,"byte_end":34269,"line_start":510,"line_end":510,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34759,"byte_end":34766,"line_start":527,"line_end":527,"column_start":12,"column_end":19},"name":"mutates","qualname":"<MessageSpecBuilder<S, Missing<state::Mutates>, P, R>>::mutates","value":"pub fn mutates(Self, bool) -> MessageSpecBuilder<S, state::Mutates, P, R>","parent":null,"children":[],"decl_id":null,"docs":" Sets if the message is mutable, thus taking `&mut self` or not thus taking `&self`.\n","sig":null,"attributes":[{"value":"/ Sets if the message is mutable, thus taking `&mut self` or not thus taking `&self`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34660,"byte_end":34747,"line_start":526,"line_end":526,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35177,"byte_end":35184,"line_start":540,"line_end":540,"column_start":12,"column_end":19},"name":"payable","qualname":"<MessageSpecBuilder<S, M, Missing<state::IsPayable>, R>>::payable","value":"pub fn payable(Self, bool) -> MessageSpecBuilder<S, M, state::IsPayable, R>","parent":null,"children":[],"decl_id":null,"docs":" Sets if the message is payable, thus accepting value for the caller.\n","sig":null,"attributes":[{"value":"/ Sets if the message is payable, thus accepting value for the caller.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35093,"byte_end":35165,"line_start":539,"line_end":539,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35601,"byte_end":35608,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"returns","qualname":"<MessageSpecBuilder<S, M, P, Missing<state::Returns>>>::returns","value":"pub fn returns(Self, ReturnTypeSpec)\n-> MessageSpecBuilder<S, M, P, state::Returns>","parent":null,"children":[],"decl_id":null,"docs":" Sets the return type of the message.\n","sig":null,"attributes":[{"value":"/ Sets the return type of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35549,"byte_end":35589,"line_start":555,"line_end":555,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36025,"byte_end":36029,"line_start":572,"line_end":572,"column_start":12,"column_end":16},"name":"args","qualname":"<MessageSpecBuilder<S, M, P, R>>::args","value":"pub fn args<A>(Self, A) -> Self where A: IntoIterator<Item = MessageParamSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the input arguments of the message specification.\n","sig":null,"attributes":[{"value":"/ Sets the input arguments of the message specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35955,"byte_end":36013,"line_start":571,"line_end":571,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36356,"byte_end":36360,"line_start":583,"line_end":583,"column_start":12,"column_end":16},"name":"docs","qualname":"<MessageSpecBuilder<S, M, P, R>>::docs","value":"pub fn docs<D>(Self, D) -> Self where D: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the documentation of the message specification.\n","sig":null,"attributes":[{"value":"/ Sets the documentation of the message specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36288,"byte_end":36344,"line_start":582,"line_end":582,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36767,"byte_end":36771,"line_start":598,"line_end":598,"column_start":12,"column_end":16},"name":"done","qualname":"<MessageSpecBuilder<state::Selector, state::Mutates, state::IsPayable,\nstate::Returns>>::done","value":"pub fn done(Self) -> MessageSpec","parent":null,"children":[],"decl_id":null,"docs":" Finishes construction of the message.\n","sig":null,"attributes":[{"value":"/ Finishes construction of the message.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36714,"byte_end":36755,"line_start":597,"line_end":597,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1660},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37725,"byte_end":37734,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"EventSpec","qualname":"::specs::EventSpec","value":"EventSpec {  }","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"decl_id":null,"docs":" Describes an event definition.\n","sig":null,"attributes":[{"value":"/ Describes an event definition.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37469,"byte_end":37503,"line_start":623,"line_end":623,"column_start":1,"column_end":35}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37560,"byte_end":37713,"line_start":625,"line_end":628,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37995,"byte_end":38011,"line_start":640,"line_end":640,"column_start":12,"column_end":28},"name":"EventSpecBuilder","qualname":"::specs::EventSpecBuilder","value":"EventSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":328}],"decl_id":null,"docs":" An event specification builder.\n","sig":null,"attributes":[{"value":"/ An event specification builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37936,"byte_end":37971,"line_start":638,"line_end":638,"column_start":1,"column_end":36}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":37972,"byte_end":37983,"line_start":639,"line_end":639,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38134,"byte_end":38138,"line_start":646,"line_end":646,"column_start":12,"column_end":16},"name":"args","qualname":"<EventSpecBuilder>::args","value":"pub fn args<A>(Self, A) -> Self where A: IntoIterator<Item = EventParamSpec>","parent":null,"children":[],"decl_id":null,"docs":" Sets the input arguments of the event specification.\n","sig":null,"attributes":[{"value":"/ Sets the input arguments of the event specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38066,"byte_end":38122,"line_start":645,"line_end":645,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38463,"byte_end":38467,"line_start":657,"line_end":657,"column_start":12,"column_end":16},"name":"docs","qualname":"<EventSpecBuilder>::docs","value":"pub fn docs<D>(Self, D) -> Self where D: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the input arguments of the event specification.\n","sig":null,"attributes":[{"value":"/ Sets the input arguments of the event specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38395,"byte_end":38451,"line_start":656,"line_end":656,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38781,"byte_end":38785,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"done","qualname":"<EventSpecBuilder>::done","value":"pub fn done(Self) -> EventSpec","parent":null,"children":[],"decl_id":null,"docs":" Finalizes building the event specification.\n","sig":null,"attributes":[{"value":"/ Finalizes building the event specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38722,"byte_end":38769,"line_start":667,"line_end":667,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39380,"byte_end":39383,"line_start":691,"line_end":691,"column_start":12,"column_end":15},"name":"new","qualname":"<EventSpec>::new","value":"pub fn new(&'static str) -> EventSpecBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new event specification builder.\n","sig":null,"attributes":[{"value":"/ Creates a new event specification builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39322,"byte_end":39368,"line_start":690,"line_end":690,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39697,"byte_end":39702,"line_start":707,"line_end":707,"column_start":12,"column_end":17},"name":"label","qualname":"<EventSpec<F>>::label","value":"pub fn label(&Self) -> &F::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the label of the event.\n","sig":null,"attributes":[{"value":"/ Returns the label of the event.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39650,"byte_end":39685,"line_start":706,"line_end":706,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39793,"byte_end":39797,"line_start":712,"line_end":712,"column_start":12,"column_end":16},"name":"args","qualname":"<EventSpec<F>>::args","value":"pub fn args(&Self) -> &[EventParamSpec<F>]","parent":null,"children":[],"decl_id":null,"docs":" The event arguments.\n","sig":null,"attributes":[{"value":"/ The event arguments.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39757,"byte_end":39781,"line_start":711,"line_end":711,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39901,"byte_end":39905,"line_start":717,"line_end":717,"column_start":12,"column_end":16},"name":"docs","qualname":"<EventSpec<F>>::docs","value":"pub fn docs(&Self) -> &[F::String]","parent":null,"children":[],"decl_id":null,"docs":" The event documentation.\n","sig":null,"attributes":[{"value":"/ The event documentation.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39861,"byte_end":39889,"line_start":716,"line_end":716,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1665},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40092,"byte_end":40100,"line_start":724,"line_end":724,"column_start":12,"column_end":20},"name":"Selector","qualname":"::specs::Selector","value":"","parent":null,"children":[],"decl_id":null,"docs":" The 4 byte selector to identify constructors and messages\n","sig":null,"attributes":[{"value":"/ The 4 byte selector to identify constructors and messages","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39959,"byte_end":40020,"line_start":722,"line_end":722,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40706,"byte_end":40714,"line_start":748,"line_end":748,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Selector>::to_bytes","value":"pub fn to_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying selector bytes.\n","sig":null,"attributes":[{"value":"/ Returns the underlying selector bytes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40652,"byte_end":40694,"line_start":747,"line_end":747,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41600,"byte_end":41611,"line_start":770,"line_end":770,"column_start":10,"column_end":21},"name":"DisplayName","qualname":"::specs::DisplayName","value":"scale_info::Path<F>","parent":null,"children":[],"decl_id":null,"docs":" Describes the syntactical name of a type at a given type position.","sig":null,"attributes":[{"value":"/ Describes the syntactical name of a type at a given type position.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40758,"byte_end":40828,"line_start":753,"line_end":753,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40829,"byte_end":40832,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ This is important when trying to work with type aliases.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40833,"byte_end":40893,"line_start":755,"line_end":755,"column_start":1,"column_end":61}},{"value":"/ Normally a type alias is transparent and so scenarios such as","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40894,"byte_end":40959,"line_start":756,"line_end":756,"column_start":1,"column_end":66}},{"value":"/ ```no_compile","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40960,"byte_end":40977,"line_start":757,"line_end":757,"column_start":1,"column_end":18}},{"value":"/ type Foo = i32;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40978,"byte_end":40997,"line_start":758,"line_end":758,"column_start":1,"column_end":20}},{"value":"/ fn bar(foo: Foo);","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40998,"byte_end":41019,"line_start":759,"line_end":759,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41020,"byte_end":41027,"line_start":760,"line_end":760,"column_start":1,"column_end":8}},{"value":"/ Will only communicate that `foo` is of type `i32` which is correct,","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41028,"byte_end":41099,"line_start":761,"line_end":761,"column_start":1,"column_end":72}},{"value":"/ however, it will miss the potentially important information that it","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41100,"byte_end":41171,"line_start":762,"line_end":762,"column_start":1,"column_end":72}},{"value":"/ is being used through a type alias named `Foo`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41172,"byte_end":41223,"line_start":763,"line_end":763,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41224,"byte_end":41227,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ In ink! we currently experience this problem with environmental types","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41228,"byte_end":41301,"line_start":765,"line_end":765,"column_start":1,"column_end":74}},{"value":"/ such as the `Balance` type that is just a type alias to `u128` in the","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41302,"byte_end":41375,"line_start":766,"line_end":766,"column_start":1,"column_end":74}},{"value":"/ default setup. Even though it would be useful for third party tools","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41376,"byte_end":41447,"line_start":767,"line_end":767,"column_start":1,"column_end":72}},{"value":"/ such as the Polkadot UI to know that we are handling with `Balance`","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41448,"byte_end":41519,"line_start":768,"line_end":768,"column_start":1,"column_end":72}},{"value":"/ types, we currently cannot communicate this without display names.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41520,"byte_end":41590,"line_start":769,"line_end":769,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42577,"byte_end":42585,"line_start":795,"line_end":795,"column_start":12,"column_end":20},"name":"TypeSpec","qualname":"::specs::TypeSpec","value":"TypeSpec {  }","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1754}],"decl_id":null,"docs":" A type specification.","sig":null,"attributes":[{"value":"/ A type specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41639,"byte_end":41664,"line_start":772,"line_end":772,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41665,"byte_end":41668,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ This contains the actual type as well as an optional compile-time","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41669,"byte_end":41738,"line_start":774,"line_end":774,"column_start":1,"column_end":70}},{"value":"/ known displayed representation of the type. This is useful for cases","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41739,"byte_end":41811,"line_start":775,"line_end":775,"column_start":1,"column_end":73}},{"value":"/ where the type is used through a type alias in order to provide","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41812,"byte_end":41879,"line_start":776,"line_end":776,"column_start":1,"column_end":68}},{"value":"/ information about the alias name.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41880,"byte_end":41917,"line_start":777,"line_end":777,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41918,"byte_end":41921,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41922,"byte_end":41936,"line_start":779,"line_end":779,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41937,"byte_end":41940,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ Consider the following Rust function:","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41941,"byte_end":41982,"line_start":781,"line_end":781,"column_start":1,"column_end":42}},{"value":"/ ```no_compile","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":41983,"byte_end":42000,"line_start":782,"line_end":782,"column_start":1,"column_end":18}},{"value":"/ fn is_sorted(input: &[i32], pred: Predicate) -> bool;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42001,"byte_end":42058,"line_start":783,"line_end":783,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42059,"byte_end":42066,"line_start":784,"line_end":784,"column_start":1,"column_end":8}},{"value":"/ In this above example `input` would have no displayable name,","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42067,"byte_end":42132,"line_start":785,"line_end":785,"column_start":1,"column_end":66}},{"value":"/ `pred`s display name is `Predicate` and the display name of","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42133,"byte_end":42196,"line_start":786,"line_end":786,"column_start":1,"column_end":64}},{"value":"/ the return type is simply `bool`. Note that `Predicate` could","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42197,"byte_end":42262,"line_start":787,"line_end":787,"column_start":1,"column_end":66}},{"value":"/ simply be a type alias to `fn(i32, i32) -> Ordering`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42263,"byte_end":42320,"line_start":788,"line_end":788,"column_start":1,"column_end":58}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42377,"byte_end":42530,"line_start":790,"line_end":793,"column_start":1,"column_end":4}},{"value":"serde(rename_all = \"camelCase\")","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42531,"byte_end":42565,"line_start":794,"line_end":794,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43435,"byte_end":43448,"line_start":826,"line_end":826,"column_start":12,"column_end":25},"name":"with_name_str","qualname":"<TypeSpec>::with_name_str","value":"pub fn with_name_str<T>(&'static str) -> Self where T: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new type specification with a display name.","sig":null,"attributes":[{"value":"/ Creates a new type specification with a display name.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43109,"byte_end":43166,"line_start":815,"line_end":815,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43171,"byte_end":43174,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ The name is any valid Rust identifier or path.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43179,"byte_end":43229,"line_start":817,"line_end":817,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43234,"byte_end":43237,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43242,"byte_end":43256,"line_start":819,"line_end":819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43261,"byte_end":43264,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Valid display names are `foo`, `foo::bar`, `foo::bar::Baz`, etc.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43269,"byte_end":43337,"line_start":821,"line_end":821,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43342,"byte_end":43345,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43350,"byte_end":43362,"line_start":823,"line_end":823,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43367,"byte_end":43370,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Panics if the given display name is invalid.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43375,"byte_end":43423,"line_start":825,"line_end":825,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43997,"byte_end":44011,"line_start":845,"line_end":845,"column_start":12,"column_end":26},"name":"with_name_segs","qualname":"<TypeSpec>::with_name_segs","value":"pub fn with_name_segs<T, S>(S) -> Self where T: TypeInfo + 'static,\nS: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new type specification with a display name\n represented by the given path segments.","sig":null,"attributes":[{"value":"/ Creates a new type specification with a display name","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43609,"byte_end":43665,"line_start":833,"line_end":833,"column_start":5,"column_end":61}},{"value":"/ represented by the given path segments.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43670,"byte_end":43713,"line_start":834,"line_end":834,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43718,"byte_end":43721,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The display name segments all must be valid Rust identifiers.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43726,"byte_end":43791,"line_start":836,"line_end":836,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43796,"byte_end":43799,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43804,"byte_end":43818,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43823,"byte_end":43826,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ Valid display names are `foo`, `foo::bar`, `foo::bar::Baz`, etc.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43831,"byte_end":43899,"line_start":840,"line_end":840,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43904,"byte_end":43907,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43912,"byte_end":43924,"line_start":842,"line_end":842,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43929,"byte_end":43932,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ Panics if the given display name is invalid.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43937,"byte_end":43985,"line_start":844,"line_end":844,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44389,"byte_end":44392,"line_start":858,"line_end":858,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeSpec>::new","value":"pub fn new<T>() -> Self where T: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new type specification without a display name.\n","sig":null,"attributes":[{"value":"/ Creates a new type specification without a display name.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44317,"byte_end":44377,"line_start":857,"line_end":857,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44656,"byte_end":44658,"line_start":874,"line_end":874,"column_start":12,"column_end":14},"name":"ty","qualname":"<TypeSpec<F>>::ty","value":"pub fn ty(&Self) -> &F::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the actual type.\n","sig":null,"attributes":[{"value":"/ Returns the actual type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44616,"byte_end":44644,"line_start":873,"line_end":873,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44792,"byte_end":44804,"line_start":879,"line_end":879,"column_start":12,"column_end":24},"name":"display_name","qualname":"<TypeSpec<F>>::display_name","value":"pub fn display_name(&Self) -> &DisplayName<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the compile-time known displayed representation of the type.\n","sig":null,"attributes":[{"value":"/ Returns the compile-time known displayed representation of the type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44708,"byte_end":44780,"line_start":878,"line_end":878,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1827},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45140,"byte_end":45154,"line_start":890,"line_end":890,"column_start":12,"column_end":26},"name":"EventParamSpec","qualname":"::specs::EventParamSpec","value":"EventParamSpec {  }","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1831}],"decl_id":null,"docs":" Describes a pair of parameter label and type.\n","sig":null,"attributes":[{"value":"/ Describes a pair of parameter label and type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44869,"byte_end":44918,"line_start":884,"line_end":884,"column_start":1,"column_end":50}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44975,"byte_end":45128,"line_start":886,"line_end":889,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45961,"byte_end":45964,"line_start":917,"line_end":917,"column_start":12,"column_end":15},"name":"new","qualname":"<EventParamSpec>::new","value":"pub fn new(&'static str) -> EventParamSpecBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new event parameter specification builder.\n","sig":null,"attributes":[{"value":"/ Creates a new event parameter specification builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45893,"byte_end":45949,"line_start":916,"line_end":916,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46506,"byte_end":46511,"line_start":937,"line_end":937,"column_start":12,"column_end":17},"name":"label","qualname":"<EventParamSpec<F>>::label","value":"pub fn label(&Self) -> &F::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the label of the parameter.\n","sig":null,"attributes":[{"value":"/ Returns the label of the parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46455,"byte_end":46494,"line_start":936,"line_end":936,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46629,"byte_end":46636,"line_start":942,"line_end":942,"column_start":12,"column_end":19},"name":"indexed","qualname":"<EventParamSpec<F>>::indexed","value":"pub fn indexed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event parameter is indexed.\n","sig":null,"attributes":[{"value":"/ Returns true if the event parameter is indexed.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46566,"byte_end":46617,"line_start":941,"line_end":941,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46736,"byte_end":46738,"line_start":947,"line_end":947,"column_start":12,"column_end":14},"name":"ty","qualname":"<EventParamSpec<F>>::ty","value":"pub fn ty(&Self) -> &TypeSpec<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the parameter.\n","sig":null,"attributes":[{"value":"/ Returns the type of the parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46686,"byte_end":46724,"line_start":946,"line_end":946,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46864,"byte_end":46868,"line_start":952,"line_end":952,"column_start":12,"column_end":16},"name":"docs","qualname":"<EventParamSpec<F>>::docs","value":"pub fn docs(&Self) -> &[F::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the documentation associated with the arguments.\n","sig":null,"attributes":[{"value":"/ Returns the documentation associated with the arguments.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46792,"byte_end":46852,"line_start":951,"line_end":951,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47001,"byte_end":47022,"line_start":959,"line_end":959,"column_start":12,"column_end":33},"name":"EventParamSpecBuilder","qualname":"::specs::EventParamSpecBuilder","value":"EventParamSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":385}],"decl_id":null,"docs":" Used to construct an event parameter specification.\n","sig":null,"attributes":[{"value":"/ Used to construct an event parameter specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46922,"byte_end":46977,"line_start":957,"line_end":957,"column_start":1,"column_end":56}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46978,"byte_end":46989,"line_start":958,"line_end":958,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47192,"byte_end":47199,"line_start":966,"line_end":966,"column_start":12,"column_end":19},"name":"of_type","qualname":"<EventParamSpecBuilder>::of_type","value":"pub fn of_type(Self, TypeSpec) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the type of the event parameter.\n","sig":null,"attributes":[{"value":"/ Sets the type of the event parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47139,"byte_end":47180,"line_start":965,"line_end":965,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47364,"byte_end":47371,"line_start":973,"line_end":973,"column_start":12,"column_end":19},"name":"indexed","qualname":"<EventParamSpecBuilder>::indexed","value":"pub fn indexed(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If the event parameter is indexed.\n","sig":null,"attributes":[{"value":"/ If the event parameter is indexed.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47314,"byte_end":47352,"line_start":972,"line_end":972,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47561,"byte_end":47565,"line_start":980,"line_end":980,"column_start":12,"column_end":16},"name":"docs","qualname":"<EventParamSpecBuilder>::docs","value":"pub fn docs<D>(Self, D) -> Self where D: IntoIterator<Item = &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Sets the documentation of the event parameter.\n","sig":null,"attributes":[{"value":"/ Sets the documentation of the event parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47499,"byte_end":47549,"line_start":979,"line_end":979,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47941,"byte_end":47945,"line_start":994,"line_end":994,"column_start":12,"column_end":16},"name":"done","qualname":"<EventParamSpecBuilder>::done","value":"pub fn done(Self) -> EventParamSpec","parent":null,"children":[],"decl_id":null,"docs":" Finishes constructing the event parameter spec.\n","sig":null,"attributes":[{"value":"/ Finishes constructing the event parameter spec.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47878,"byte_end":47929,"line_start":993,"line_end":993,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1863},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48290,"byte_end":48304,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"ReturnTypeSpec","qualname":"::specs::ReturnTypeSpec","value":"ReturnTypeSpec {  }","parent":null,"children":[{"krate":0,"index":1865}],"decl_id":null,"docs":" Describes the contract message return type.\n","sig":null,"attributes":[{"value":"/ Describes the contract message return type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47999,"byte_end":48046,"line_start":999,"line_end":999,"column_start":1,"column_end":48}},{"value":"serde(transparent)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48103,"byte_end":48124,"line_start":1001,"line_end":1001,"column_start":1,"column_end":22}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48125,"byte_end":48278,"line_start":1002,"line_end":1005,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49097,"byte_end":49100,"line_start":1034,"line_end":1034,"column_start":12,"column_end":15},"name":"new","qualname":"<ReturnTypeSpec>::new","value":"pub fn new<T>(T) -> Self where T: Into<Option<TypeSpec>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new return type specification from the given type or `None`.","sig":null,"attributes":[{"value":"/ Creates a new return type specification from the given type or `None`.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48743,"byte_end":48817,"line_start":1024,"line_end":1024,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48822,"byte_end":48825,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48830,"byte_end":48844,"line_start":1026,"line_end":1026,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48849,"byte_end":48852,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48857,"byte_end":48870,"line_start":1028,"line_end":1028,"column_start":5,"column_end":18}},{"value":"/ # use ink_metadata::{TypeSpec, ReturnTypeSpec};","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48875,"byte_end":48926,"line_start":1029,"line_end":1029,"column_start":5,"column_end":56}},{"value":"/ ReturnTypeSpec::new(None); // no return type;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48931,"byte_end":48980,"line_start":1030,"line_end":1030,"column_start":5,"column_end":54}},{"value":"/ ReturnTypeSpec::new(TypeSpec::new::<i32>()); // return type of `i32`","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48985,"byte_end":49057,"line_start":1031,"line_end":1031,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49062,"byte_end":49069,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49074,"byte_end":49085,"line_start":1033,"line_end":1033,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49336,"byte_end":49344,"line_start":1049,"line_end":1049,"column_start":12,"column_end":20},"name":"opt_type","qualname":"<ReturnTypeSpec<F>>::opt_type","value":"pub fn opt_type(&Self) -> Option<&TypeSpec<F>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the optional return type\n","sig":null,"attributes":[{"value":"/ Returns the optional return type","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49288,"byte_end":49324,"line_start":1048,"line_end":1048,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49689,"byte_end":49705,"line_start":1060,"line_end":1060,"column_start":12,"column_end":28},"name":"MessageParamSpec","qualname":"::specs::MessageParamSpec","value":"MessageParamSpec {  }","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936}],"decl_id":null,"docs":" Describes a pair of parameter label and type.\n","sig":null,"attributes":[{"value":"/ Describes a pair of parameter label and type.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49418,"byte_end":49467,"line_start":1054,"line_end":1054,"column_start":1,"column_end":50}},{"value":"serde(bound(serialize = \"F::Type: Serialize, F::String: Serialize\",\ndeserialize = \"F::Type: DeserializeOwned, F::String: DeserializeOwned\"))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49524,"byte_end":49677,"line_start":1056,"line_end":1059,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50292,"byte_end":50295,"line_start":1081,"line_end":1081,"column_start":12,"column_end":15},"name":"new","qualname":"<MessageParamSpec>::new","value":"pub fn new(&'static str) -> MessageParamSpecBuilder","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new message parameter specification via builder.\n","sig":null,"attributes":[{"value":"/ Constructs a new message parameter specification via builder.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50215,"byte_end":50280,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50655,"byte_end":50660,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"label","qualname":"<MessageParamSpec<F>>::label","value":"pub fn label(&Self) -> &F::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the label of the parameter.\n","sig":null,"attributes":[{"value":"/ Returns the label of the parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50604,"byte_end":50643,"line_start":1096,"line_end":1096,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50765,"byte_end":50767,"line_start":1102,"line_end":1102,"column_start":12,"column_end":14},"name":"ty","qualname":"<MessageParamSpec<F>>::ty","value":"pub fn ty(&Self) -> &TypeSpec<F>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the parameter.\n","sig":null,"attributes":[{"value":"/ Returns the type of the parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50715,"byte_end":50753,"line_start":1101,"line_end":1101,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50899,"byte_end":50922,"line_start":1109,"line_end":1109,"column_start":12,"column_end":35},"name":"MessageParamSpecBuilder","qualname":"::specs::MessageParamSpecBuilder","value":"MessageParamSpecBuilder {  }","parent":null,"children":[{"krate":0,"index":412}],"decl_id":null,"docs":" Used to construct a message parameter specification.\n","sig":null,"attributes":[{"value":"/ Used to construct a message parameter specification.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50819,"byte_end":50875,"line_start":1107,"line_end":1107,"column_start":1,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50876,"byte_end":50887,"line_start":1108,"line_end":1108,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51109,"byte_end":51116,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"of_type","qualname":"<MessageParamSpecBuilder>::of_type","value":"pub fn of_type(Self, TypeSpec) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the type of the message parameter.\n","sig":null,"attributes":[{"value":"/ Sets the type of the message parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51054,"byte_end":51097,"line_start":1115,"line_end":1115,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51290,"byte_end":51294,"line_start":1123,"line_end":1123,"column_start":12,"column_end":16},"name":"done","qualname":"<MessageParamSpecBuilder>::done","value":"pub fn done(Self) -> MessageParamSpec","parent":null,"children":[],"decl_id":null,"docs":" Finishes construction of the message parameter.\n","sig":null,"attributes":[{"value":"/ Finishes construction of the message parameter.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51227,"byte_end":51278,"line_start":1122,"line_end":1122,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1938},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1765,"byte_end":1767,"line_start":70,"line_end":70,"column_start":5,"column_end":7},"name":"V0","qualname":"::MetadataVersioned::V0","value":"MetadataVersioned::V0(MetadataVersionDeprecated)","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Version 0 placeholder. Represents the original non-versioned metadata format.\n","sig":null,"attributes":[{"value":"/ Version 0 placeholder. Represents the original non-versioned metadata format.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1679,"byte_end":1760,"line_start":69,"line_end":69,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1941},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1844,"byte_end":1846,"line_start":72,"line_end":72,"column_start":5,"column_end":7},"name":"V1","qualname":"::MetadataVersioned::V1","value":"MetadataVersioned::V1(MetadataVersionDeprecated)","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Version 1 of the contract metadata.\n","sig":null,"attributes":[{"value":"/ Version 1 of the contract metadata.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1800,"byte_end":1839,"line_start":71,"line_end":71,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1944},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1923,"byte_end":1925,"line_start":74,"line_end":74,"column_start":5,"column_end":7},"name":"V2","qualname":"::MetadataVersioned::V2","value":"MetadataVersioned::V2(MetadataVersionDeprecated)","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Version 2 of the contract metadata.\n","sig":null,"attributes":[{"value":"/ Version 2 of the contract metadata.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1879,"byte_end":1918,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1947},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2002,"byte_end":2004,"line_start":76,"line_end":76,"column_start":5,"column_end":7},"name":"V3","qualname":"::MetadataVersioned::V3","value":"MetadataVersioned::V3(InkProject)","parent":{"krate":0,"index":1937},"children":[],"decl_id":null,"docs":" Version 3 of the contract metadata.\n","sig":null,"attributes":[{"value":"/ Version 3 of the contract metadata.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1958,"byte_end":1997,"line_start":75,"line_end":75,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1937},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1655,"byte_end":1672,"line_start":68,"line_end":68,"column_start":10,"column_end":27},"name":"MetadataVersioned","qualname":"::MetadataVersioned","value":"pub enum MetadataVersioned {\n    V0(MetadataVersionDeprecated),\n    V1(MetadataVersionDeprecated),\n    V2(MetadataVersionDeprecated),\n    V3(InkProject),\n}","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947}],"decl_id":null,"docs":" Versioned ink! project metadata.","sig":null,"attributes":[{"value":"/ Versioned ink! project metadata.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1351,"byte_end":1387,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1388,"byte_end":1391,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1392,"byte_end":1402,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1403,"byte_end":1406,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Represents the version of the serialized metadata *format*, which is distinct from the version","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1407,"byte_end":1505,"line_start":64,"line_end":64,"column_start":1,"column_end":99}},{"value":"/ of this crate for Rust semantic versioning compatibility.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1506,"byte_end":1567,"line_start":65,"line_end":65,"column_start":1,"column_end":62}},{"value":"allow(clippy :: large_enum_variant)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":1609,"byte_end":1645,"line_start":67,"line_end":67,"column_start":1,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":2001},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2297,"byte_end":2322,"line_start":87,"line_end":87,"column_start":10,"column_end":35},"name":"MetadataVersionDeprecated","qualname":"::MetadataVersionDeprecated","value":"pub enum MetadataVersionDeprecated { }","parent":null,"children":[],"decl_id":null,"docs":" Enum to represent a deprecated metadata version that cannot be instantiated.\n","sig":null,"attributes":[{"value":"/ Enum to represent a deprecated metadata version that cannot be instantiated.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2166,"byte_end":2246,"line_start":85,"line_end":85,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2445,"byte_end":2455,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"InkProject","qualname":"::InkProject","value":"InkProject {  }","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2047}],"decl_id":null,"docs":" An entire ink! project for metadata file generation purposes.\n","sig":null,"attributes":[{"value":"/ An entire ink! project for metadata file generation purposes.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2327,"byte_end":2392,"line_start":89,"line_end":89,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2706,"byte_end":2709,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<InkProject>::new","value":"pub fn new<L, S>(L, S) -> Self where L: Into<layout::Layout>,\nS: Into<ContractSpec>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3158,"byte_end":3166,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"registry","qualname":"<InkProject>::registry","value":"pub fn registry(&Self) -> &PortableRegistry","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only registry of types in the contract.\n","sig":null,"attributes":[{"value":"/ Returns a read-only registry of types in the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3088,"byte_end":3146,"line_start":117,"line_end":117,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3290,"byte_end":3296,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"layout","qualname":"<InkProject>::layout","value":"pub fn layout(&Self) -> &layout::Layout<PortableForm>","parent":null,"children":[],"decl_id":null,"docs":" Returns the storage layout of the contract.\n","sig":null,"attributes":[{"value":"/ Returns the storage layout of the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3231,"byte_end":3278,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3429,"byte_end":3433,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"spec","qualname":"<InkProject>::spec","value":"pub fn spec(&Self) -> &ContractSpec<PortableForm>","parent":null,"children":[],"decl_id":null,"docs":" Returns the specification of the contract.\n","sig":null,"attributes":[{"value":"/ Returns the specification of the contract.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3371,"byte_end":3417,"line_start":127,"line_end":127,"column_start":5,"column_end":51}}]}],"impls":[{"id":8,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5921,"byte_end":5930,"line_start":80,"line_end":80,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6147,"byte_end":6156,"line_start":89,"line_end":89,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6447,"byte_end":6456,"line_start":100,"line_end":100,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6559,"byte_end":6568,"line_start":106,"line_end":106,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6653,"byte_end":6662,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7225,"byte_end":7235,"line_start":132,"line_end":132,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7469,"byte_end":7479,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7736,"byte_end":7742,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8533,"byte_end":8543,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9483,"byte_end":9493,"line_start":212,"line_end":212,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9793,"byte_end":9803,"line_start":224,"line_end":224,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10137,"byte_end":10147,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11410,"byte_end":11425,"line_start":282,"line_end":282,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13180,"byte_end":13191,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13598,"byte_end":13609,"line_start":356,"line_end":356,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14277,"byte_end":14288,"line_start":383,"line_end":383,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15044,"byte_end":15056,"line_start":407,"line_end":407,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15286,"byte_end":15298,"line_start":419,"line_end":419,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15472,"byte_end":15484,"line_start":429,"line_end":429,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16453,"byte_end":16464,"line_start":461,"line_end":461,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16740,"byte_end":16751,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17207,"byte_end":17218,"line_start":495,"line_end":495,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17686,"byte_end":17698,"line_start":510,"line_end":510,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17771,"byte_end":17783,"line_start":516,"line_end":516,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18426,"byte_end":18436,"line_start":537,"line_end":537,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18782,"byte_end":18792,"line_start":551,"line_end":551,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":19150,"byte_end":19160,"line_start":566,"line_end":566,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":21228,"byte_end":21240,"line_start":59,"line_end":59,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22019,"byte_end":22031,"line_start":84,"line_end":84,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23016,"byte_end":23035,"line_start":123,"line_end":123,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23560,"byte_end":23579,"line_start":140,"line_end":140,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24815,"byte_end":24834,"line_start":187,"line_end":187,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25220,"byte_end":25232,"line_start":202,"line_end":202,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26409,"byte_end":26424,"line_start":238,"line_end":238,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26952,"byte_end":26967,"line_start":256,"line_end":256,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28089,"byte_end":28104,"line_start":301,"line_end":301,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28610,"byte_end":28632,"line_start":319,"line_end":319,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29046,"byte_end":29068,"line_start":335,"line_end":335,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29509,"byte_end":29531,"line_start":351,"line_end":351,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30222,"byte_end":30244,"line_start":375,"line_end":375,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32009,"byte_end":32020,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32678,"byte_end":32689,"line_start":452,"line_end":452,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34163,"byte_end":34181,"line_start":509,"line_end":509,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34601,"byte_end":34619,"line_start":525,"line_end":525,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35032,"byte_end":35050,"line_start":538,"line_end":538,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35490,"byte_end":35508,"line_start":554,"line_end":554,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35918,"byte_end":35936,"line_start":570,"line_end":570,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36622,"byte_end":36640,"line_start":595,"line_end":595,"column_start":5,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36844,"byte_end":36855,"line_start":603,"line_end":603,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38043,"byte_end":38059,"line_start":644,"line_end":644,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38856,"byte_end":38865,"line_start":673,"line_end":673,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39306,"byte_end":39315,"line_start":689,"line_end":689,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39612,"byte_end":39621,"line_start":702,"line_end":702,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40138,"byte_end":40146,"line_start":726,"line_end":726,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40361,"byte_end":40369,"line_start":735,"line_end":735,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40637,"byte_end":40645,"line_start":746,"line_end":746,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42808,"byte_end":42816,"line_start":803,"line_end":803,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43094,"byte_end":43102,"line_start":814,"line_end":814,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44579,"byte_end":44587,"line_start":869,"line_end":869,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45491,"byte_end":45505,"line_start":902,"line_end":902,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45872,"byte_end":45886,"line_start":915,"line_end":915,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46412,"byte_end":46426,"line_start":932,"line_end":932,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47111,"byte_end":47132,"line_start":964,"line_end":964,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48417,"byte_end":48431,"line_start":1011,"line_end":1011,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48722,"byte_end":48736,"line_start":1023,"line_end":1023,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49245,"byte_end":49259,"line_start":1044,"line_end":1044,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49897,"byte_end":49913,"line_start":1068,"line_end":1068,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50192,"byte_end":50208,"line_start":1079,"line_end":1079,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50559,"byte_end":50575,"line_start":1092,"line_end":1092,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51024,"byte_end":51047,"line_start":1114,"line_end":1114,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/utils.rs","byte_start":52586,"byte_end":52593,"line_start":36,"line_end":36,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2047,"byte_end":2064,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2682,"byte_end":2692,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3071,"byte_end":3081,"line_start":116,"line_end":116,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":739,"byte_end":745,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":5921,"byte_end":5930,"line_start":80,"line_end":80,"column_start":27,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":624},"to":{"krate":25,"index":2101}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6147,"byte_end":6156,"line_start":89,"line_end":89,"column_start":39,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":624},"to":{"krate":25,"index":1560}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6447,"byte_end":6456,"line_start":100,"line_end":100,"column_start":28,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6559,"byte_end":6568,"line_start":106,"line_end":106,"column_start":20,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":6653,"byte_end":6662,"line_start":112,"line_end":112,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7225,"byte_end":7235,"line_start":132,"line_end":132,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7469,"byte_end":7479,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":721},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":7736,"byte_end":7742,"line_start":156,"line_end":156,"column_start":23,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":607},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":8533,"byte_end":8543,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9483,"byte_end":9493,"line_start":212,"line_end":212,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":800},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":9793,"byte_end":9803,"line_start":224,"line_end":224,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":10137,"byte_end":10147,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":11410,"byte_end":11425,"line_start":282,"line_end":282,"column_start":6,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13180,"byte_end":13191,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":13598,"byte_end":13609,"line_start":356,"line_end":356,"column_start":9,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":14277,"byte_end":14288,"line_start":383,"line_end":383,"column_start":23,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1070},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15044,"byte_end":15056,"line_start":407,"line_end":407,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15286,"byte_end":15298,"line_start":419,"line_end":419,"column_start":9,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":15472,"byte_end":15484,"line_start":429,"line_end":429,"column_start":23,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1147},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16453,"byte_end":16464,"line_start":461,"line_end":461,"column_start":6,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":16740,"byte_end":16751,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17207,"byte_end":17218,"line_start":495,"line_end":495,"column_start":23,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1223},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17686,"byte_end":17698,"line_start":510,"line_end":510,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":17771,"byte_end":17783,"line_start":516,"line_end":516,"column_start":6,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18426,"byte_end":18436,"line_start":537,"line_end":537,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":18782,"byte_end":18792,"line_start":551,"line_end":551,"column_start":9,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1344},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/layout/mod.rs","byte_start":19150,"byte_end":19160,"line_start":566,"line_end":566,"column_start":23,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1344},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":21228,"byte_end":21240,"line_start":59,"line_end":59,"column_start":23,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1419},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":22019,"byte_end":22031,"line_start":84,"line_end":84,"column_start":9,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23016,"byte_end":23035,"line_start":123,"line_end":123,"column_start":6,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":23560,"byte_end":23579,"line_start":140,"line_end":140,"column_start":9,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":24815,"byte_end":24834,"line_start":187,"line_end":187,"column_start":6,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":25220,"byte_end":25232,"line_start":202,"line_end":202,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26409,"byte_end":26424,"line_start":238,"line_end":238,"column_start":23,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1498},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":26952,"byte_end":26967,"line_start":256,"line_end":256,"column_start":9,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28089,"byte_end":28104,"line_start":301,"line_end":301,"column_start":6,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":28610,"byte_end":28632,"line_start":319,"line_end":319,"column_start":9,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29046,"byte_end":29068,"line_start":335,"line_end":335,"column_start":9,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":29509,"byte_end":29531,"line_start":351,"line_end":351,"column_start":12,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":30222,"byte_end":30244,"line_start":375,"line_end":375,"column_start":6,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32009,"byte_end":32020,"line_start":427,"line_end":427,"column_start":6,"column_end":17},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":32678,"byte_end":32689,"line_start":452,"line_end":452,"column_start":9,"column_end":20},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34163,"byte_end":34181,"line_start":509,"line_end":509,"column_start":15,"column_end":33},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":34601,"byte_end":34619,"line_start":525,"line_end":525,"column_start":15,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35032,"byte_end":35050,"line_start":538,"line_end":538,"column_start":15,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35490,"byte_end":35508,"line_start":554,"line_end":554,"column_start":15,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":35918,"byte_end":35936,"line_start":570,"line_end":570,"column_start":18,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36622,"byte_end":36640,"line_start":595,"line_end":595,"column_start":5,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":36844,"byte_end":36855,"line_start":603,"line_end":603,"column_start":23,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1582},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38043,"byte_end":38059,"line_start":644,"line_end":644,"column_start":6,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":38856,"byte_end":38865,"line_start":673,"line_end":673,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1660},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39306,"byte_end":39315,"line_start":689,"line_end":689,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":39612,"byte_end":39621,"line_start":702,"line_end":702,"column_start":9,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40138,"byte_end":40146,"line_start":726,"line_end":726,"column_start":27,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1665},"to":{"krate":25,"index":2101}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40361,"byte_end":40369,"line_start":735,"line_end":735,"column_start":39,"column_end":47},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1665},"to":{"krate":25,"index":1560}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":40637,"byte_end":40645,"line_start":746,"line_end":746,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":42808,"byte_end":42816,"line_start":803,"line_end":803,"column_start":23,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1752},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":43094,"byte_end":43102,"line_start":814,"line_end":814,"column_start":6,"column_end":14},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":44579,"byte_end":44587,"line_start":869,"line_end":869,"column_start":9,"column_end":17},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45491,"byte_end":45505,"line_start":902,"line_end":902,"column_start":23,"column_end":37},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1827},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":45872,"byte_end":45886,"line_start":915,"line_end":915,"column_start":6,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":46412,"byte_end":46426,"line_start":932,"line_end":932,"column_start":9,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":47111,"byte_end":47132,"line_start":964,"line_end":964,"column_start":6,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48417,"byte_end":48431,"line_start":1011,"line_end":1011,"column_start":23,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1863},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":48722,"byte_end":48736,"line_start":1023,"line_end":1023,"column_start":6,"column_end":20},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49245,"byte_end":49259,"line_start":1044,"line_end":1044,"column_start":9,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":49897,"byte_end":49913,"line_start":1068,"line_end":1068,"column_start":23,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1933},"to":{"krate":24,"index":517}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50192,"byte_end":50208,"line_start":1079,"line_end":1079,"column_start":6,"column_end":22},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":50559,"byte_end":50575,"line_start":1092,"line_end":1092,"column_start":9,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/specs.rs","byte_start":51024,"byte_end":51047,"line_start":1114,"line_end":1114,"column_start":6,"column_end":29},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/utils.rs","byte_start":52586,"byte_end":52593,"line_start":36,"line_end":36,"column_start":41,"column_end":48},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":425},"to":{"krate":25,"index":1646}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2047,"byte_end":2064,"line_start":79,"line_end":79,"column_start":27,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1937},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":2682,"byte_end":2692,"line_start":100,"line_end":100,"column_start":6,"column_end":16},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/ink_metadata-3.2.0/src/lib.rs","byte_start":3071,"byte_end":3081,"line_start":116,"line_end":116,"column_start":6,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}}]}