{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0","program":"/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","array_init","--edition=2018","/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","overflow-checks=off","-C","metadata=46c70b48b3819567","-C","extra-filename=-46c70b48b3819567","--out-dir","/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps","-L","dependency=/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/amir/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/amir/Documents/polkadot-amm/contract/target/rls/debug/deps/libarray_init-46c70b48b3819567.rmeta"},"prelude":{"crate_id":{"name":"array_init","disambiguator":[16843248088873455028,0]},"crate_root":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src","external_crates":[{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11763967750977672065,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10106063140927293834,0]}},{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[7335734036341381276,0]}}],"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":0,"byte_end":13691,"line_start":1,"line_end":374,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":0,"byte_end":13691,"line_start":1,"line_end":374,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":32}],"decl_id":null,"docs":" The `array-init` crate allows you to initialize arrays\n with an initializer closure that will be called\n once for each element until the array is filled.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/ The `array-init` crate allows you to initialize arrays","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":12,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/ with an initializer closure that will be called","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":71,"byte_end":122,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"/ once for each element until the array is filled.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":123,"byte_end":175,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":176,"byte_end":179,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This way you do not need to default-fill an array","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":180,"byte_end":233,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ before running initializers. Rust currently only","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":234,"byte_end":286,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ lets you either specify all initializers at once,","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":287,"byte_end":340,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/ individually (`[a(), b(), c(), ...]`), or specify","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":341,"byte_end":394,"line_start":10,"line_end":10,"column_start":1,"column_end":54}},{"value":"/ one initializer for a `Copy` type (`[a(); N]`),","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":395,"byte_end":446,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/ which will be called once with the result copied over.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":447,"byte_end":505,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":506,"byte_end":509,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Care is taken not to leak memory shall the initialization","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":510,"byte_end":571,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ fail.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":572,"byte_end":581,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":582,"byte_end":585,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":586,"byte_end":601,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/ ```rust","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":602,"byte_end":613,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":614,"byte_end":637,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ # extern crate array_init;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":638,"byte_end":668,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":669,"byte_end":674,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ // Initialize an array of length 50 containing","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":675,"byte_end":725,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ // successive squares","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":726,"byte_end":751,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":752,"byte_end":755,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let arr: [u32; 50] = array_init::array_init(|i: usize| (i * i) as u32);","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":756,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":832,"byte_end":835,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Initialize an array from an iterator","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":836,"byte_end":879,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ // producing an array of [1,2,3,4] repeated","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":880,"byte_end":927,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":928,"byte_end":931,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let four = [1,2,3,4];","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":932,"byte_end":957,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ let mut iter = four.iter().copied().cycle();","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":958,"byte_end":1006,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let arr: [u32; 50] = array_init::from_iter(iter).unwrap();","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1007,"byte_end":1069,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1070,"byte_end":1073,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Closures can also mutate state. We guarantee that they will be called","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1074,"byte_end":1150,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ // in order from lower to higher indices.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1151,"byte_end":1196,"line_start":35,"line_end":35,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1197,"byte_end":1200,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut last = 1u64;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1201,"byte_end":1225,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/ let mut secondlast = 0;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1226,"byte_end":1253,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/ let fibonacci: [u64; 50] = array_init::array_init(|_| {","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1254,"byte_end":1313,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     let this = last + secondlast;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1314,"byte_end":1351,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/     secondlast = last;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1352,"byte_end":1378,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/     last = this;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1379,"byte_end":1399,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/     this","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1400,"byte_end":1412,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/ });","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1413,"byte_end":1420,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1421,"byte_end":1428,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2030,"byte_end":2040,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"array_init","qualname":"::array_init","value":"pub fn array_init<F, T, const N: usize>(F) -> [T; ] where F: FnMut(usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an initializer expression.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1494,"byte_end":1503,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ Initialize an array given an initializer expression.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1504,"byte_end":1560,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The initializer is given the index of the element. It is allowed","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1565,"byte_end":1633,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ to mutate external state; we will always initialize the elements in order.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1634,"byte_end":1712,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1713,"byte_end":1716,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1717,"byte_end":1731,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1736,"byte_end":1747,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1748,"byte_end":1771,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/ # extern crate array_init;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1772,"byte_end":1802,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1803,"byte_end":1808,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ // Initialize an array of length 50 containing","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1809,"byte_end":1859,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/ // successive squares","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1860,"byte_end":1885,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/ let arr: [usize; 50] = array_init::array_init(|i| i * i);","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1886,"byte_end":1947,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1948,"byte_end":1951,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ assert!(arr.iter().enumerate().all(|(i, &x)| x == i * i));","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":1952,"byte_end":2014,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2015,"byte_end":2022,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3065,"byte_end":3074,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::from_iter","value":"pub fn from_iter<Iterable, T, const N: usize>(Iterable) -> Option<[T; ]> where\nIterable: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an iterator","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2407,"byte_end":2416,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ Initialize an array given an iterator","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2417,"byte_end":2458,"line_start":87,"line_end":87,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2459,"byte_end":2462,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ We will iterate until the array is full or the iterator is exhausted. Returns","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2463,"byte_end":2544,"line_start":89,"line_end":89,"column_start":1,"column_end":82}},{"value":"/ `None` if the iterator is exhausted before we can fill the array.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2545,"byte_end":2614,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/   - Once the array is full, extra elements from the iterator (if any)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2619,"byte_end":2692,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/     won't be consumed.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2693,"byte_end":2719,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2720,"byte_end":2723,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2724,"byte_end":2738,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2739,"byte_end":2742,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2743,"byte_end":2754,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2755,"byte_end":2778,"line_start":98,"line_end":98,"column_start":1,"column_end":24}},{"value":"/ # extern crate array_init;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2779,"byte_end":2809,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2810,"byte_end":2815,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ // Initialize an array from an iterator","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2816,"byte_end":2859,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/ // producing an array of [1,2,3,4] repeated","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2860,"byte_end":2907,"line_start":102,"line_end":102,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let four = [1,2,3,4];","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2912,"byte_end":2937,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/ let mut iter = four.iter().copied().cycle();","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2938,"byte_end":2986,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"/ let arr: [u32; 50] = array_init::from_iter(iter).unwrap();","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":2987,"byte_end":3049,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3050,"byte_end":3057,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4317,"byte_end":4331,"line_start":150,"line_end":150,"column_start":8,"column_end":22},"name":"try_array_init","qualname":"::try_array_init","value":"pub fn try_array_init<Err, F, T, const N: usize>(F) -> Result<[T; ], Err>\nwhere F: FnMut(usize) -> Result<T, Err>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an array given an initializer expression that may fail.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3321,"byte_end":3330,"line_start":119,"line_end":119,"column_start":1,"column_end":10}},{"value":"/ Initialize an array given an initializer expression that may fail.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3331,"byte_end":3401,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3402,"byte_end":3405,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The initializer is given the index (between 0 and `N - 1` included) of the element, and returns a `Result<T, Err>,`. It is allowed","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3406,"byte_end":3540,"line_start":122,"line_end":122,"column_start":1,"column_end":135}},{"value":"/ to mutate external state; we will always initialize from lower to higher indices.","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3541,"byte_end":3626,"line_start":123,"line_end":123,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3627,"byte_end":3630,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3631,"byte_end":3645,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3646,"byte_end":3649,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3650,"byte_end":3661,"line_start":127,"line_end":127,"column_start":1,"column_end":12}},{"value":"/ # #![allow(unused)]","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3662,"byte_end":3685,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/ # extern crate array_init;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3686,"byte_end":3716,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3717,"byte_end":3722,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ #[derive(PartialEq,Eq,Debug)]","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3723,"byte_end":3756,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/ struct DivideByZero;","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3757,"byte_end":3781,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3782,"byte_end":3785,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ fn inv(i : usize) -> Result<f64,DivideByZero> {","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3786,"byte_end":3837,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/     if i == 0 {","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3838,"byte_end":3857,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"/         Err(DivideByZero)","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3858,"byte_end":3887,"line_start":136,"line_end":136,"column_start":1,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3888,"byte_end":3904,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/         Ok(1./(i as f64))","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3905,"byte_end":3934,"line_start":138,"line_end":138,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3935,"byte_end":3944,"line_start":139,"line_end":139,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3945,"byte_end":3950,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3951,"byte_end":3954,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // If the initializer does not fail, we get an initialized array","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":3955,"byte_end":4023,"line_start":142,"line_end":142,"column_start":1,"column_end":69}},{"value":"/ let arr: [f64; 3] = array_init::try_array_init(|i| inv(3-i)).unwrap();","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4024,"byte_end":4098,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(arr,[1./3., 1./2., 1./1.]);","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4099,"byte_end":4141,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4142,"byte_end":4145,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ // The initializer fails","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4146,"byte_end":4174,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"/ let res : Result<[f64;4], DivideByZero> = array_init::try_array_init(|i| inv(3-i));","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4175,"byte_end":4262,"line_start":147,"line_end":147,"column_start":1,"column_end":88}},{"value":"/ assert_eq!(res,Err(DivideByZero));","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4263,"byte_end":4301,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":4302,"byte_end":4309,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":5944,"byte_end":5964,"line_start":190,"line_end":190,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/amir/.cargo/registry/src/github.com-1ecc6299db9ec823/array-init-2.0.0/src/lib.rs","byte_start":5944,"byte_end":5964,"line_start":190,"line_end":190,"column_start":29,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":3300}}]}